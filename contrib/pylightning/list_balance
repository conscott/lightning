#!/usr/bin/env python3

import os
import sys
from lightning import LightningRpc

def default_configdir():
    home = os.getenv("HOME")
    if home:
        return os.path.join(home, ".lightning")
    return "."

COIN = 10**8.0

rpc_path = os.path.join(default_configdir(), "lightning-rpc")
ld = LightningRpc(rpc_path)

funds = ld.listfunds()

onchain_value = sum([int(x["value"]) for x in funds["outputs"]]) / COIN
channel_value = sum([int(x["channel_sat"]) for x in funds["channels"]]) / COIN
total_funds = onchain_value + channel_value

print("Onchain  %s" % onchain_value)
print("Channel  %s" % channel_value)
print("Total    %s" % total_funds)

peerinfo = ld.listpeers()

num_pending = 0

num_incoming = 0
incoming = 0
num_outgoing = 0
outgoing = 0

incoming_total_balance = 0
outgoing_total_balance = 0
for p in peerinfo['peers']:
    for channel in p['channels']:
        if 'owner' in channel:
            outgoing += channel['msatoshi_total']
            num_outgoing += 1
        else:
            incoming += channel['msatoshi_total']
            num_incoming += 1
        incoming_total_balance += (channel['msatoshi_total'] - channel['msatoshi_to_us'])
        outgoing_total_balance += channel['msatoshi_to_us']

print("%s outgoing channels opened with %s total" % (num_outgoing, outgoing))
print("%s incoming channels opened with %s total" % (num_incoming, incoming))
print("Balance available outgoing: %s" % (outgoing_total_balance))
print("Balance available incoming: %s" % (incoming_total_balance))


